var container=document.querySelector(".container-fluid"),dropdown=document.getElementById("navbarDropdownMenuLink"),dropdownItems=document.querySelectorAll(".dropdown-item");let dataLengthOld=0,dataLengthNew=0,url="https://api.rungrueng.site",temperatureChart,humidityChart,r=20,rH=20,currentTime=new Date,map,filteredData=[],Databetween;async function submitForm(){var e=document.getElementById("start").value,t=document.getElementById("end").value;window.location.href=`results.html?start=${e}&end=${t}`}async function fetchData(){let e=new URLSearchParams(window.location.search),t=e.get("start"),a=e.get("end");if(document.getElementById("start").value=t||"2023-12-29T00:00",document.getElementById("end").value=a||"2023-12-29T15:00",!t||!a)return console.error("Invalid URL parameters. Both 'start' and 'end' are required."),null;let i=await fetch("https://api.rungrueng.site/api/date",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({start:t,end:a})}),o=await i.json();return Array.isArray(o)&&o.length>0?console.log("fetchData successful: Received valid data."):console.error("Invalid or empty data received:",o),o}function mapDataValues(e,t){return e.map(e=>0===e[t]?null:e[t])}function createChart(e,t,a,i,o,n,d,l,m,u,g){function p(e){return e.map(e=>new Date(e.Time).toISOString().replace(".000Z",""))}console.log(`

`);let y=t,s=a,c=i,h=o,f=p(y),b=p(s),N=p(c),T=p(h);if("temp"===g){console.log("Creating Temperature Chart...");let _=f.slice(-1*r),C=b.slice(-1*r),x=N.slice(-1*r),H=T.slice(-1*r),v=mapDataValues(y,"Temperature"),D=mapDataValues(s,"Temperature"),B=mapDataValues(c,"Temperature"),w=mapDataValues(h,"Temperature");v=v.slice(-r),D=D.slice(-r),B=B.slice(-r),w=w.slice(-r),console.log("Temperature 1:",JSON.stringify(v),"Length:",v.length),console.log("Temperature 2:",JSON.stringify(D),"Length:",D.length),console.log("Temperature 3:",JSON.stringify(B),"Length:",B.length),console.log("Temperature 4:",JSON.stringify(w),"Length:",w.length);let I=0;for(let E=0;E<v.length;E++)I+=v[E];let A=(I/v.length).toFixed(2);console.log(`Average Temperature: ${A}`);let k=_.map((e,t)=>({x:e,y:v[t]})),S=C.map((e,t)=>({x:e,y:D[t]})),V=x.map((e,t)=>({x:e,y:B[t]})),M=H.map((e,t)=>({x:e,y:w[t]})),F={datasets:[{label:n,data:k.map(e=>({x:e.x,y:e.y})),yAxisID:"y1",backgroundColor:"rgba(255, 26, 104, 0.8)",borderColor:"rgba(255, 26, 104, 1)",borderWidth:2},{label:d,data:S.map(e=>({x:e.x,y:e.y})),yAxisID:"y1",backgroundColor:"rgba(54, 162, 235, 0.8)",borderColor:"rgba(54, 162, 235, 1)",borderWidth:2},{label:l,data:V.map(e=>({x:e.x,y:e.y})),yAxisID:"y1",backgroundColor:"rgba(255, 255, 0, 0.8)",borderColor:"rgba(255, 255, 0, 1)",borderWidth:2},{label:m,data:M.map(e=>({x:e.x,y:e.y})),yAxisID:"y1",backgroundColor:"rgba(0, 255, 0, 0.8)",borderColor:"rgba(0, 255, 0, 1)",borderWidth:2},]},U={type:"line",data:F,options:{animation:{duration:!1},elements:{line:{tension:.35}},scales:{x:{type:"time",ticks:{major:{enabled:!0},font(e){let t=e.tick&&e.tick.major?"900":"";return{weight:t}}},time:{unit:"minute",displayFormats:{minute:"HH:mm"}},title:{display:!0,text:"Time"},grid:{color:"rgba(255, 255, 255, 0.2)"},min:_[0],max:_[-r]},y1:{grid:{color:"rgba(255, 255, 255, 0.2"},title:{display:!0,text:u},suggestedMin:parseFloat(A)-1,suggestedMax:parseFloat(A)+2}},plugins:{legend:{display:!0,position:"top"}}}},W=new Chart(document.getElementById(e),U);temperatureCharts=W}else if("humid"===g){console.log("Creating Humidity Chart...");let j=f.slice(-1*rH),q=b.slice(-1*rH),O=N.slice(-1*rH),R=T.slice(-1*rH),z=mapDataValues(y,"Humidity"),P=mapDataValues(s,"Humidity"),Z=mapDataValues(c,"Humidity"),G=mapDataValues(h,"Humidity");z=z.slice(-rH),P=P.slice(-rH),Z=Z.slice(-rH),G=G.slice(-rH),console.log("Humidity 1:",JSON.stringify(z),"Length:",z.length),console.log("Humidity 2:",JSON.stringify(P),"Length:",P.length),console.log("Humidity 3:",JSON.stringify(Z),"Length:",Z.length),console.log("Humidity 4:",JSON.stringify(G),"Length:",G.length),sum=0;for(let J=0;J<z.length;J++)sum+=z[J];let K=(sum/z.length).toFixed(2);console.log(`Average Humidity: ${K}`);let Q=j.map((e,t)=>({x:e,y:z[t]})),X=q.map((e,t)=>({x:e,y:P[t]})),Y=O.map((e,t)=>({x:e,y:Z[t]})),ee=R.map((e,t)=>({x:e,y:G[t]})),et={datasets:[{label:n,data:Q.map(e=>({x:e.x,y:e.y})),yAxisID:"y1",backgroundColor:"rgba(255, 26, 104, 0.8)",borderColor:"rgba(255, 26, 104, 1)",borderWidth:2},{label:d,data:X.map(e=>({x:e.x,y:e.y})),yAxisID:"y1",backgroundColor:"rgba(54, 162, 235, 0.8)",borderColor:"rgba(54, 162, 235, 1)",borderWidth:2},{label:l,data:Y.map(e=>({x:e.x,y:e.y})),yAxisID:"y1",backgroundColor:"rgba(255, 255, 0, 0.8)",borderColor:"rgba(255, 255, 0, 1)",borderWidth:2},{label:m,data:ee.map(e=>({x:e.x,y:e.y})),yAxisID:"y1",backgroundColor:"rgba(0, 255, 0, 0.8)",borderColor:"rgba(0, 255, 0, 1)",borderWidth:2},]},ea={type:"line",data:et,options:{animation:{duration:!1},elements:{line:{tension:.35}},scales:{x:{type:"time",ticks:{major:{enabled:!0}},time:{unit:"minute",displayFormats:{minute:"HH:mm"}},title:{display:!0,text:"Time"},grid:{color:"rgba(255, 255, 255, 0.2)"}},y1:{grid:{color:"rgba(255, 255, 255, 0.2"},title:{display:!0,text:u},suggestedMin:parseFloat(K)-1.5,suggestedMax:parseFloat(K)+1}},plugins:{legend:{display:!0,position:"top"}}}},er=new Chart(document.getElementById(e),ea);humidityCharts=er}else console.log(`Creating ${g} Chart`)}function updateCardLayout(){var e=window.innerWidth;if(window.innerHeight,e<=500){var t=document.getElementById("humidityChart"),a=document.getElementById("temperatureChart");t.height=120,a.height=120,main()}if(e<=1300&&e>992){var i=document.querySelectorAll(".temp");i.forEach(function(e){e.textContent="Temp"});var o=document.querySelectorAll(".humi");o.forEach(function(e){e.textContent="Humid"})}else{var i=document.querySelectorAll(".temp");i.forEach(function(e){e.textContent="Temperature"});var o=document.querySelectorAll(".humi");o.forEach(function(e){e.textContent="Humidity"})}}async function fetchDataAndToggle(){try{let e=await fetch(url+"/api/node"),t=await e.json();console.log("fetchDataAndToggle - Data received: "+t.nodenames),updateCheckbox(t,"Node1","node1toggle"),updateCheckbox(t,"Node2","node2toggle"),updateCheckbox(t,"Node3","node3toggle"),updateCheckbox(t,"Node4","node4toggle")}catch(a){console.error("Error fetching data:",a)}}function updateCheckbox(e,t,a){let i=e.nodenames.includes(t);document.getElementById(a).checked=i,i?$(`#${a}`).bootstrapToggle("on"):$(`#${a}`).bootstrapToggle("off")}function toggleChanged(e,t){console.log(e+" is toggled"),$(`#${t}`).bootstrapToggle("toggle"),fetch(url+"/api/activate?nodename="+e)}function filterDataByNode(e,t){return e.filter(e=>e.Nodename===t)}function updateAvg(e,t,a){let i=e.map(e=>e.Temperature),o=e.map(e=>e.Humidity),n=0,d=0;for(let l=0;l<i.length;l++)n+=i[l];let m=n/i.length;for(let u=0;u<o.length;u++)d+=o[u];let g=d/o.length;console.log(`Average Temperature [${t}]: ${m.toFixed(2)} \xb0C`),console.log(`Average Humidity [${a}]: ${g.toFixed(2)} %`);let p=document.getElementById(t);p&&(p.innerHTML=`: ${m.toFixed(2)} ํC`);let y=document.getElementById(a);y&&(y.innerHTML=`: ${g.toFixed(2)} %`)}function updateLastUpdateTime(e){let t=document.getElementById("lastUpdateTime");if(t){let a=e[0],i=e[e.length-1],o=new Date(a.Time),n=new Date(i.Time),d={weekday:"short",year:"numeric",month:"short",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",timeZone:"UTC"};Databetween=`(Data between ${o=o.toLocaleString("en-US",d)} and ${n=n.toLocaleString("en-US",d)}`,t.textContent=Databetween}}function updatelog(e){let t={hour:"numeric",minute:"numeric",second:"numeric",timeZone:"UTC"};e.forEach(e=>{let t=new Date(e.Time).getTime(),a=currentTime.getTime()+252e5;console.log(`elementTimestamp: ${t}`),console.log(`currentTimestamp: ${a}`),t>a&&(filteredData.push(e),filteredData.reverse())}),console.log(filteredData);let a=filteredData.map(e=>{let a=new Date(e.Time).toLocaleString("en-US",t);return`[${a}] Received data from ${e.Nodename} temperature is ${e.Temperature} \xb0C and humidity is ${e.Humidity}% <br>`}),i=document.getElementById("realtimelog");i.innerHTML=a.join(""),console.log(a.join(""))}document.addEventListener("DOMContentLoaded",function(){var e=Math.floor(1001*Math.random()),t=document.createElement("style");t.textContent=`
  :root {
    --animate-duration: ${e+500}ms !important;
    --animate-delay: 1s !important;
  }
`,document.head.appendChild(t),setTimeout(function(){$("#loadingMessage").hide()},e)}),updateCardLayout(),window.addEventListener("resize",function(){updateCardLayout(),console.log("resize")});let slider=document.getElementById("myRange"),sliderHumi=document.getElementById("myRangehumi");function drawmap(e){map&&map.remove&&(map.eachLayer(function(e){e.remove()}),map.off(),map.remove());let t;for(let a=400;a<e.length;a++){let i=e.slice(-a);if(console.log(i),"Node1"===i[0].Nodename){console.log(a),t=a;break}}var o=e,n=mapDataValues(o,"Latitude"),d=mapDataValues(o,"Longitude");if(n.length>0&&d.length>0){let l=0;for(let m=0;m<n.length;m++)l+=n[m];let u=(l/n.length).toFixed(6);l=0;for(let g=0;g<d.length;g++)l+=d[g];let p=(l/d.length).toFixed(6);map=L.map("map").setView([u,p],20),L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png").addTo(map);for(var y=0,s=0;s<o.length;s++)if(console.log("i = "+s),null!==o[s].Latitude&&null!==o[s].Longitude){for(var c=`rgb(0, 250, ${255-255*(s/o.length)})`,h=o[s]["Node Battery"]<0?0:o[s]["Node Battery"],f=`Time: ${o[s].Time} +7<br>Nodename: ${o[s].Nodename}<br>Node Battery: ${h} %<br>Temperature: ${o[s].Temperature} \xb0C<br>Humidity: ${o[s].Humidity} %`,b=s+1;b<o.length;b++)console.log("Namein "+o[s].Nodename),o[s].Latitude===o[b].Latitude&&o[s].Longitude===o[b].Longitude&&1e4>=Math.abs(new Date(o[s].Time)-new Date(o[b].Time))&&(console.log("Nameinner "+o[s].Nodename),f+=`<br><br>Time: ${o[b].Time} +7<br>Nodename: ${o[b].Nodename}<br>Node Battery: ${h=o[b]["Node Battery"]<0?0:o[b]["Node Battery"]} %<br>Temperature: ${o[b].Temperature} \xb0C<br>Humidity: ${o[b].Humidity} %`,s=b);console.log("counter : "+y),y++,L.marker([o[s].Latitude,o[s].Longitude],{icon:L.divIcon({className:"custom-marker",iconSize:[20,20],iconAnchor:[10,10],html:`<div style="background-color: ${c}; border: 2px solid black; width: 20px; height: 20px; border-radius: 50%;">${y}</div>`})}).addTo(map).bindPopup(f).openPopup()}}else console.error("No valid data for drawing the map.")}function createGraph(e,t,a,i){temperatureCharts.destroy(),createChart("temperatureChart",e,t,a,i,"Temperature (Node1)","Temperature (Node2)","Temperature (Node3)","Temperature (Node4)","Temperature (\xb0C)","temp"),humidityCharts.destroy(),createChart("humidityChart",e,t,a,i,"Humidity (Node1)","Humidity (Node2)","Humidity (Node3)","Humidity (Node4)","Humidity (%)","humid")}function updatenodebatt(e,t){if(e.length>0){let a=e[e.length-1];console.log(a);let i=a["Node Battery"];console.log(`Battery Level [${t}]: ${i} %`);let o=document.getElementById(t);o.innerHTML=`: ${i} %`}else console.error("Data array is empty")}async function main(){let e=await fetchData();if(dataLengthNew=e.length,0==dataLengthOld){let t=filterDataByNode(e,"Node1"),a=filterDataByNode(e,"Node2"),i=filterDataByNode(e,"Node3"),o=filterDataByNode(e,"Node4");updateLastUpdateTime(t),console.log(`

`),console.log(Databetween),console.table(e),console.log(`Number of data points: ${dataLengthNew}`),updateAvg(t,"node1avgtemp","node1avghumi"),updateAvg(a,"node2avgtemp","node2avghumi"),updateAvg(i,"node3avgtemp","node3avghumi"),updateAvg(o,"node4avgtemp","node4avghumi"),updatenodebatt(t,"node1batt"),updatenodebatt(t,"node2batt"),updatenodebatt(t,"node3batt"),updatenodebatt(t,"node4batt"),createChart("temperatureChart",t,a,i,o,"Temperature (Node1)","Temperature (Node2)","Temperature (Node3)","Temperature (Node4)","Temperature (\xb0C)","temp"),createChart("humidityChart",t,a,i,o,"Humidity (Node1)","Humidity (Node2)","Humidity (Node3)","Humidity (Node4)","Humidity (%)","humid"),drawmap(e),dataLengthOld=dataLengthNew}}r=slider.value,rH=sliderHumi.value,slider.oninput=function(){r=this.value;var e=document.getElementById("sliderValue");console.log(e.innerHTML),e.innerText=r},sliderHumi.oninput=function(){rH=this.value;var e=document.getElementById("sliderValuehumi");console.log(e.innerHTML),e.innerText=rH},slider.onmouseup=async function(){let e=await fetchData(),t=filterDataByNode(e,"Node1"),a=filterDataByNode(e,"Node2"),i=filterDataByNode(e,"Node3"),o=filterDataByNode(e,"Node4");temperatureCharts.destroy(),createChart("temperatureChart",t,a,i,o,"Temperature (Node1)","Temperature (Node2)","Temperature (Node3)","Temperature (Node4)","Temperature (\xb0C)","temp")},sliderHumi.onmouseup=async function(){let e=await fetchData(),t=filterDataByNode(e,"Node1"),a=filterDataByNode(e,"Node2"),i=filterDataByNode(e,"Node3"),o=filterDataByNode(e,"Node4");humidityCharts.destroy(),createChart("humidityChart",t,a,i,o,"Humidity (Node1)","Humidity (Node2)","Humidity (Node3)","Humidity (Node4)","Humidity (%)","humid")},main(),fetchDataAndToggle();
